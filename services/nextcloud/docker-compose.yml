networks:
  proxy:
    external: true
  backend:

volumes:
  nc-data:
    external: true
  nc-config:
  pg-data:

services:
  app:
    image: nextcloud:stable-fpm
    volumes:
      - nc-data:/data
      - nc-config:/var/www/html
    environment:
      - POSTGRES_HOST=postgresql
      - POSTGRES_DB_FILE=/run/secrets/nc-postgres-db
      - POSTGRES_USER_FILE=/run/secrets/nc-postgres-user
      - POSTGRES_PASSWORD_FILE=/run/secrets/nc-postgres-password
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nc-admin-password
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nc-admin-user
      - NEXTCLOUD_TRUSTED_DOMAINS=cloud.capass.org
      - NEXTCLOUD_UPDATE=1
      - TRUSTED_PROXIES=172.19.0.0/24
      - REDIS_HOST=redis
      - NEXTCLOUD_DATA_DIR=/data
    networks:
      - backend
      - default
    secrets:
      - nc-admin-password
      - nc-admin-user
      - nc-postgres-db
      - nc-postgres-password
      - nc-postgres-user

  web:
    image: nginx:alpine
    volumes_from:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - proxy
      - default
    labels:
      traefik.enable: true
      traefik.http.routers.cloud.entryPoints: https
      traefik.http.routers.cloud.tls: true
      traefik.http.routers.cloud.rule: Host(`cloud.capass.org`)
      traefik.http.routers.cloud.middlewares: nextcloud-caldav@docker,nextcloud-wellknown@docker
      # middleware definition
      traefik.http.middlewares.nextcloud-caldav.replacepathregex.regex: ^/.well-known/(card|cal)dav
      traefik.http.middlewares.nextcloud-caldav.replacepathregex.replacement: /remote.php/dav/
      traefik.http.middlewares.nextcloud-wellknown.replacepathregex.regex: ^(/.well-known.*)
      traefik.http.middlewares.nextcloud-wellknown.replacepathregex.replacement: /index.php$${1}
      traefik.http.middlewares.nc-header.headers.stsSeconds: 15552000
      traefik.http.middlewares.nc-header.headers.forceSTSHeader: true
      traefik.http.middlewares.nc-header.headers.stsPreload: true
      traefik.http.middlewares.nc-header.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.nc-header.headers.browserXssFilter: true
      traefik.http.middlewares.nc-header.headers.customFrameOptionsValue: SAMEORIGIN
      traefik.http.middlewares.nc-header.headers.contentSecurityPolicy: "default-src 'self';frame-ancestors 'self';style-src 'self' 'unsafe-inline';script-src 'self' 'unsafe-inline' 'unsafe-eval';img-src 'self' data:;font-src 'self' data:"

  cron:
    image: nextcloud:stable-fpm
    volumes:
      - nc-data:/data
      - nc-config:/var/www/html
    entrypoint: /cron.sh
    networks:
      - backend
    depends_on:
      - app
 
  postgresql:
    image: postgres:14.6-alpine
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB_FILE=/run/secrets/nc-postgres-db
      - POSTGRES_USER_FILE=/run/secrets/nc-postgres-user
      - POSTGRES_PASSWORD_FILE=/run/secrets/nc-postgres-password
    secrets:
      - nc-postgres-db
      - nc-postgres-password
      - nc-postgres-user
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:alpine
    networks:
      - backend

secrets:
  nc-admin-password:
    file: ./secrets/nextcloud_admin_password.txt
  nc-admin-user:
    file: ./secrets/nextcloud_admin_user.txt
  nc-postgres-db:
    file: ./secrets/postgres_db.txt
  nc-postgres-password:
    file: ./secrets/postgres_password.txt
  nc-postgres-user:
    file: ./secrets/postgres_user.txt
